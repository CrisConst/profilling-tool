{"ast":null,"code":"var _jsxFileName = \"/Users/tec35038/w/profilling/project/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst simulateLongTask = duration => {\n  const start = Date.now();\n  while (Date.now() - start < duration) {\n    Math.sqrt(Math.random() * Math.random());\n  }\n  console.log(`Simulated long task for ${duration}ms`);\n};\nconst simulateTasks = () => {\n  simulateLongTask(4000); // Long task of 4000ms\n  for (let i = 0; i < 5; i++) {\n    simulateLongTask(200); // Long tasks of 200ms\n  }\n  simulateLongTask(5000); // Another long task of 5000ms\n  console.log('Simulated all tasks');\n};\nfunction App() {\n  _s();\n  useEffect(() => {\n    const observer = new PerformanceObserver(list => {\n      const entries = list.getEntries();\n      entries.forEach(entry => {\n        console.log(`Entry: ${JSON.stringify(entry)}`);\n      });\n    });\n    observer.observe({\n      type: 'longtask',\n      buffered: true\n    });\n\n    // Run the tasks after the observer is set up\n    setTimeout(simulateTasks, 1000);\n\n    // Capture all performance entries after tasks are simulated\n    setTimeout(() => {\n      const entries = performance.getEntries();\n      console.log('All performance entries:', JSON.stringify(entries, null, 2));\n    }, 15000); // Delay to ensure tasks are completed\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"src/App.js\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 16\n        }, this), \" and save to reload.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","simulateLongTask","duration","start","Date","now","Math","sqrt","random","console","log","simulateTasks","i","App","_s","observer","PerformanceObserver","list","entries","getEntries","forEach","entry","JSON","stringify","observe","type","buffered","setTimeout","performance","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tec35038/w/profilling/project/src/App.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport './App.css';\n\nconst simulateLongTask = (duration) => {\n  const start = Date.now();\n  while (Date.now() - start < duration) {\n    Math.sqrt(Math.random() * Math.random());\n  }\n  console.log(`Simulated long task for ${duration}ms`);\n};\n\nconst simulateTasks = () => {\n  simulateLongTask(4000);  // Long task of 4000ms\n  for (let i = 0; i < 5; i++) {\n    simulateLongTask(200);  // Long tasks of 200ms\n  }\n  simulateLongTask(5000);  // Another long task of 5000ms\n  console.log('Simulated all tasks');\n};\n\nfunction App() {\n  useEffect(() => {\n    const observer = new PerformanceObserver((list) => {\n      const entries = list.getEntries();\n      entries.forEach(entry => {\n        console.log(`Entry: ${JSON.stringify(entry)}`);\n      });\n    });\n    observer.observe({ type: 'longtask', buffered: true });\n\n    // Run the tasks after the observer is set up\n    setTimeout(simulateTasks, 1000);\n\n    // Capture all performance entries after tasks are simulated\n    setTimeout(() => {\n      const entries = performance.getEntries();\n      console.log('All performance entries:', JSON.stringify(entries, null, 2));\n    }, 15000);  // Delay to ensure tasks are completed\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,gBAAgB,GAAIC,QAAQ,IAAK;EACrC,MAAMC,KAAK,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;EACxB,OAAOD,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGF,KAAK,GAAGD,QAAQ,EAAE;IACpCI,IAAI,CAACC,IAAI,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGF,IAAI,CAACE,MAAM,CAAC,CAAC,CAAC;EAC1C;EACAC,OAAO,CAACC,GAAG,CAAC,2BAA2BR,QAAQ,IAAI,CAAC;AACtD,CAAC;AAED,MAAMS,aAAa,GAAGA,CAAA,KAAM;EAC1BV,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAE;EACzB,KAAK,IAAIW,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC1BX,gBAAgB,CAAC,GAAG,CAAC,CAAC,CAAE;EAC1B;EACAA,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAE;EACzBQ,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;AACpC,CAAC;AAED,SAASG,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACbhB,SAAS,CAAC,MAAM;IACd,MAAMiB,QAAQ,GAAG,IAAIC,mBAAmB,CAAEC,IAAI,IAAK;MACjD,MAAMC,OAAO,GAAGD,IAAI,CAACE,UAAU,CAAC,CAAC;MACjCD,OAAO,CAACE,OAAO,CAACC,KAAK,IAAI;QACvBZ,OAAO,CAACC,GAAG,CAAC,UAAUY,IAAI,CAACC,SAAS,CAACF,KAAK,CAAC,EAAE,CAAC;MAChD,CAAC,CAAC;IACJ,CAAC,CAAC;IACFN,QAAQ,CAACS,OAAO,CAAC;MAAEC,IAAI,EAAE,UAAU;MAAEC,QAAQ,EAAE;IAAK,CAAC,CAAC;;IAEtD;IACAC,UAAU,CAAChB,aAAa,EAAE,IAAI,CAAC;;IAE/B;IACAgB,UAAU,CAAC,MAAM;MACf,MAAMT,OAAO,GAAGU,WAAW,CAACT,UAAU,CAAC,CAAC;MACxCV,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEY,IAAI,CAACC,SAAS,CAACL,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IAC3E,CAAC,EAAE,KAAK,CAAC,CAAC,CAAE;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACElB,OAAA;IAAK6B,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClB9B,OAAA;MAAQ6B,SAAS,EAAC,YAAY;MAAAC,QAAA,eAC5B9B,OAAA;QAAA8B,QAAA,GAAG,OACI,eAAA9B,OAAA;UAAA8B,QAAA,EAAM;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,wBAC9B;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACpB,EAAA,CA7BQD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AA+BZ,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}